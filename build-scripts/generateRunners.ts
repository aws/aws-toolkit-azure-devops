/*!
 * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: MIT
 */

import * as path from 'path'
import * as ts from 'typescript'

const repoRoot = path.dirname(__dirname)

const header =
`
/*!
 * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: MIT
 */

/* NOTE! this file is auto-generated by generateRunners.ts */
`

const run =
`
run().then((result) =>
    tl.setResult(tl.TaskResult.Succeeded, '')
).catch((error) =>
    tl.setResult(tl.TaskResult.Failed, \`\${error}\`)
)
`

function doThing(filename: string, clientType: string) {
    const runStatement =
`
async function run(): Promise<void> {
    SdkUtils.readResources()
    const taskParameters = buildTaskParameters()
    const client = createDefault${clientType}Client()
    return new TaskOperations(client, taskParameters).execute()
}
`

    const importStament =
`
import tl = require('vsts-task-lib/task')

import { SdkUtils } from 'Common/sdkutils

import { createDefault${clientType} } from 'Common/defaultClients'
import { TaskOperations } from './TaskOperations'
import { buildTaskParameters } from './TaskParameters'

`

    const thing = header + importStament + runStatement + run
    console.log(thing)
}

doThing('SecretsManagerGetSecret', 'SecretsManager')
