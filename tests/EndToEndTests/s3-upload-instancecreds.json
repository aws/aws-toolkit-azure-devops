{
    "options": [
        {
            "enabled": false,
            "definition": { "id": "5d58cc01-7c75-450c-be18-a388ddb129ec" },
            "inputs": { "branchFilters": "[\"+refs/heads/*\"]", "additionalFields": "{}" }
        },
        {
            "enabled": false,
            "definition": { "id": "a9db38f9-9fdc-478c-b0f9-464221e58316" },
            "inputs": { "workItemType": "1", "assignToRequestor": "true", "additionalFields": "{}" }
        }
    ],
    "variables": {
        "system.debug": { "value": "false", "allowOverride": true },
        "targetFolder": { "value": "s3/uploadcontent-instancecreds", "allowOverride": true }
    },
    "jobAuthorizationScope": 1,
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "process": {
        "phases": [
            {
                "steps": [
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Upload content",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "S3Upload_1",
                        "task": {
                            "id": "3a219265-181c-4ed2-9a51-75a7f308f0d5",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "",
                            "regionName": "",
                            "bucketName": "$(bucketName)",
                            "sourceFolder": "uploadContent",
                            "globExpressions": "**",
                            "targetFolder": "$(targetFolder)",
                            "filesAcl": "private",
                            "createBucket": "false",
                            "keyManagement": "none",
                            "encryptionAlgorithm": "KMS",
                            "kmsMasterKeyId": "",
                            "customerKey": "",
                            "overwrite": "true",
                            "flattenFolders": "false",
                            "contentType": "",
                            "storageClass": "STANDARD",
                            "forcePathStyleAddressing": "false",
                            "logRequest": "false",
                            "logResponse": "false"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Validate",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "AWSPowerShellModuleScript_2",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "",
                            "regionName": "",
                            "arguments": "\"$(bucketName)\" \"$(targetFolder)\"",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$bucketName,\n [string]$targetFolder\n)\n\n$keysToTest = @(\n '$(targetFolder)/WebApplication1/Content/bootstrap-theme.css'\n '$(targetFolder)/WebApplication1/Scripts/jquery.validate-vsdoc.js'\n '$(targetFolder)/WebApplication1/Views/Shared/Error.cshtml'\n '$(targetFolder)/WebApplication1/Web.Debug.config'\n '$(targetFolder)/WebApplication1/fonts/glyphicons-halflings-regular.woff'\n '$(targetFolder)/WebApplication1/packages.config'\n)\n\nWrite-Host \"Retrieving object keys to validate from $targetFolder in bucket $bucketName\"\n$keys = Get-S3Object -BucketName $bucketName -KeyPrefix $targetFolder | Select-Object -Property Key\n\nif ($keys)\n{\n Write-Host \"PASS! Retrieved $($keys.Count) keys\"\n\n Write-Host \"...performing spot-check on a subset of keys\"\n $keysToTest | % { if (!($keys.Key.Contains($_))) { throw \"FAIL! Returned keys did not contain $_\" } }\n Write-Host \"PASS! All expected keys found\"\n}\nelse\n{\n throw \"FAIL! Did not recover any keys from the target key prefix\"\n}",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": true,
                        "displayName": "Cleanup",
                        "timeoutInMinutes": 0,
                        "condition": "succeededOrFailed()",
                        "refName": "AWSPowerShellModuleScript_3",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "",
                            "regionName": "",
                            "arguments": "\"$(bucketName)\" \"$(targetFolder)\"",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$bucketName,\n [string]$targetFolder\n)\n\nWrite-Host \"Retrieving object keys to delete from $targetFolder in bucket $bucketName\"\n$objects = Get-S3Object -BucketName $bucketName -KeyPrefix $targetFolder\n\nWrite-Host \"Deleting objects\"\n$objects | Remove-S3Object -BucketName $bucketName -Force\n",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    }
                ],
                "name": null,
                "refName": "Phase_1",
                "target": { "executionOptions": null, "allowScriptsAuthAccessOption": false, "type": 1 },
                "jobAuthorizationScope": 0
            }
        ],
        "type": 1
    },
    "repository": {
        "properties": {
            "cleanOptions": "0",
            "labelSources": "0",
            "labelSourcesFormat": "$(build.buildNumber)",
            "reportBuildStatus": "true",
            "gitLfsSupport": "false",
            "skipSyncSource": "false",
            "checkoutNestedSubmodules": "false",
            "fetchDepth": "0"
        },
        "id": "f0f167f8-5e29-4d05-9139-d126feea6c0b",
        "type": "TfsGit",
        "name": "VstsTesting",
        "defaultBranch": "refs/heads/master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": 1,
    "drafts": [],
    "id": 24,
    "name": "s3-upload-instancecreds",
    "path": "\\",
    "type": 2,
    "queueStatus": 0,
    "revision": 3,
    "project": { "name": "VstsTesting", "state": "wellFormed", "visibility": 0 }
}
