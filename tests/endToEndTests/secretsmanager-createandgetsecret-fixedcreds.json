{
    "options": [
        {
            "enabled": false,
            "definition": { "id": "5d58cc01-7c75-450c-be18-a388ddb129ec" },
            "inputs": { "branchFilters": "[\"+refs/heads/*\"]", "additionalFields": "{}" }
        },
        {
            "enabled": false,
            "definition": { "id": "a9db38f9-9fdc-478c-b0f9-464221e58316" },
            "inputs": { "workItemType": "1", "assignToRequestor": "true", "additionalFields": "{}" }
        }
    ],
    "variables": {
        "system.debug": { "value": "false", "allowOverride": true },
        "secretName": { "value": "mySecretFixedCreds$(Build.BuildNumber)", "allowOverride": true },
        "initialSecretValue": { "value": "my super secret value", "allowOverride": true },
        "updatedSecretValue": { "value": "my updated but still super secret value", "allowOverride": true }
    },
    "jobAuthorizationScope": 1,
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "process": {
        "phases": [
            {
                "steps": [
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Create secret",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "SecretsManagerCreateOrUpdateSecret_1",
                        "task": {
                            "id": "3d6cb0c8-d1f9-465f-957a-a02c776646a0",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "secretNameOrId": "$(secretName)",
                            "description": "integration test secret ",
                            "secretValueSource": "inline",
                            "secretValue": "$(initialSecretValue)",
                            "secretValueType": "string",
                            "secretValueFile": "",
                            "kmsKeyId": "",
                            "autoCreateSecret": "true",
                            "tags": "",
                            "arnOutputVariable": "mySecretArn",
                            "versionIdOutputVariable": "mySecretVersion",
                            "logRequest": "false",
                            "logResponse": "false"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Validate created",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "AWSPowerShellModuleScript_2",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "arguments": "$(secretName) $(mySecretArn) $(mySecretVersion)",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$secretName,\n [string]$secretArn,\n [string]$secretVersion\n)\n\nWrite-Host \"Validating secret was created\"\n\n$secret = Get-SECSecret -SecretId $secretName\nif ($secret)\n{\n Write-Host \"PASS! Secret exists in store\"\n}\nelse \n{\n throw \"FAIL! Could not find secret $secretName in store\"\n}\n\nif ($secretArn)\n{\n Write-Host \"PASS! Output variable for secret arn was set to $secretArn\"\n}\nelse\n{\n throw \"FAIL! Output variable to hold secret arn was not set\"\n}\n\nif ($secretVersion)\n{\n Write-Host \"PASS! Output variable for secret version was set to $secretVersion\"\n}\nelse\n{\n throw \"FAIL! Output variable to hold secret version was not set\"\n}\n",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Get secret",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "SecretsManagerGetSecret_3",
                        "task": {
                            "id": "b6d19a53-dc5f-4b71-a49c-63e87f49e9ab",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "secretIdOrName": "$(secretName)",
                            "variableName": "mySecretValue",
                            "versionId": "",
                            "versionStage": "",
                            "logRequest": "false",
                            "logResponse": "false"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Validate get",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "AWSPowerShellModuleScript_4",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "arguments": "\"$(initialSecretValue)\" \"$(mySecretValue)\"",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$expected,\n [string]$actual\n)\n\nWrite-Host \"Verifying secret value was retrieved\"\nif ($expected -eq $actual)\n{\n Write-Host \"PASS! Retrieved secret value matches expected\"\n}\nelse \n{\n throw \"FAIL! expected value does not match actual\"\n}",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Update secret",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "SecretsManagerCreateOrUpdateSecret_5",
                        "task": {
                            "id": "3d6cb0c8-d1f9-465f-957a-a02c776646a0",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "secretNameOrId": "$(secretName)",
                            "description": "",
                            "secretValueSource": "inline",
                            "secretValue": "$(updatedSecretValue)",
                            "secretValueType": "string",
                            "secretValueFile": "",
                            "kmsKeyId": "",
                            "autoCreateSecret": "false",
                            "tags": "",
                            "arnOutputVariable": "",
                            "versionIdOutputVariable": "",
                            "logRequest": "false",
                            "logResponse": "false"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Get updated secret",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "SecretsManagerGetSecret_6",
                        "task": {
                            "id": "b6d19a53-dc5f-4b71-a49c-63e87f49e9ab",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "secretIdOrName": "$(secretName)",
                            "variableName": "myUpdatedSecretValue",
                            "versionId": "",
                            "versionStage": "",
                            "logRequest": "false",
                            "logResponse": "false"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Validate update",
                        "timeoutInMinutes": 0,
                        "condition": "succeeded()",
                        "refName": "AWSPowerShellModuleScript_7",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "arguments": " \"$(updatedSecretValue)\" \"$(myUpdatedSecretValue)\"",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$expected,\n [string]$actual\n)\n\nWrite-Host \"Verifying secret value was retrieved\"\nif ($expected -eq $actual)\n{\n Write-Host \"PASS! Retrieved secret value matches expected\"\n}\nelse \n{\n throw \"FAIL! expected value does not match actual\"\n}",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": true,
                        "displayName": "Cleanup",
                        "timeoutInMinutes": 0,
                        "condition": "succeededOrFailed()",
                        "refName": "AWSPowerShellModuleScript_8",
                        "task": {
                            "id": "37dda93c-8427-4372-9b7b-9b6e10f3f744",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "awsCredentials": "649d8e1b-d788-4d2f-9491-654ff2700e68",
                            "regionName": "us-west-2",
                            "arguments": "$(secretName)",
                            "scriptType": "inline",
                            "filePath": "",
                            "inlineScript": "Param (\n [string]$secretName\n)\n\nWrite-Host \"Scheduling deletion of secret $secretName\"\nRemove-SECSecret -SecretId $secretName -RecoveryWindowInDays 7 -Force\n",
                            "errorActionPreference": "stop",
                            "failOnStderr": "false",
                            "ignoreLASTEXITCODE": "false",
                            "workingDirectory": ""
                        }
                    }
                ],
                "name": null,
                "refName": "Phase_1",
                "target": { "executionOptions": null, "allowScriptsAuthAccessOption": false, "type": 1 },
                "jobAuthorizationScope": 0
            }
        ],
        "type": 1
    },
    "repository": {
        "properties": {
            "cleanOptions": "0",
            "labelSources": "0",
            "labelSourcesFormat": "$(build.buildNumber)",
            "reportBuildStatus": "true",
            "gitLfsSupport": "false",
            "skipSyncSource": "true",
            "checkoutNestedSubmodules": "false",
            "fetchDepth": "0"
        },
        "id": "f0f167f8-5e29-4d05-9139-d126feea6c0b",
        "type": "TfsGit",
        "name": "VstsTesting",
        "defaultBranch": "refs/heads/master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": 1,
    "drafts": [],
    "id": 28,
    "name": "secretsmanager-createandgetsecret-fixedcreds",
    "path": "\\",
    "type": 2,
    "queueStatus": 0,
    "revision": 2,
    "project": { "name": "VstsTesting", "state": "wellFormed", "visibility": 0 }
}
