{
    "id": "7ef7cdfa-aa45-42c5-93c8-d7603643dd99",
    "name": "CloudFormationCreateOrUpdateStack",
    "friendlyName": "AWS CloudFormation Create/Update Stack",
    "description": "Creates a new AWS CloudFormation stack or updates the stack if it exists.",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [AWS CloudFormation User Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/) for more details on working with AWS CloudFormation.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/cloudformation-create-update.html).\n\n####Task Permissions\nThis task requires permissions to call the following AWS service APIs (depending on selected task options, not all APIs may be used):\n* cloudformation:CreateChangeSet\n* cloudformation:CreateStack\n* cloudformation:DeleteChangeSet\n* cloudformation:DescribeChangeSet\n* cloudformation:DescribeStacks\n* cloudformation:DescribeStackResources\n* cloudformation:ExecuteChangeSet\n* cloudformation:UpdateStack\n\nThe task may also require permissions to upload your application template to the specified Amazon S3 bucket.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "1",
        "Patch": "8"
    },
    "runsOn": [
        "Agent"
    ],
    "minimumAgentVersion": "1.91.0",
    "groups": [
        {
            "name": "Capabilities",
            "displayName": "Capabilities",
            "isExpanded": true
        },
        {
            "name": "Advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "Options",
            "displayName": "Options",
            "isExpanded": true
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "instanceNameFormat": "Create/Update Stack: $(stackName)",
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to obtain credentials from the following sources in order:\n\n* From task variables named _AWS.AccessKeyID_, _AWS.SecretAccessKey_ and optionally _AWS.SessionToken_.\n* From credentials set in environment variables in the build agent process. When using environment variables in the build agent process you may use the standard AWS environment variables: _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n* If the build agent is running on an Amazon EC2 instance, from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "pickList",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used from the following sources:\n\n* From a task variable named _AWS.Region_.\n* From the standard AWS environment variable _AWS_REGION_ in the build agent's environment.\n*  If the build agent is running on an Amazon EC2 instance, from instance metadata associated with the EC2 instance.\n\n__Note:__ The regions listed in the picker are those known at the time this software was released. New regions that are not listed may still be used by entering the _region code_ of the region (for example _us_west_2_).",
            "options": {
                "ap-east-1": "Asia Pacific (Hong Kong) [ap-east-1]",
                "ap-northeast-1": "Asia Pacific (Tokyo) [ap-northeast-1]",
                "ap-northeast-2": "Asia Pacific (Seoul) [ap-northeast-2]",
                "ap-south-1": "Asia Pacific (Mumbai) [ap-south-1]",
                "ap-southeast-1": "Asia Pacific (Singapore) [ap-southeast-1]",
                "ap-southeast-2": "Asia Pacific (Sydney) [ap-southeast-2]",
                "ca-central-1": "Canada (Central) [ca-central-1]",
                "eu-central-1": "EU (Frankfurt) [eu-central-1]",
                "eu-north-1": "EU (Stockholm) [eu-north-1]",
                "eu-west-1": "EU (Ireland) [eu-west-1]",
                "eu-west-2": "EU (London) [eu-west-2]",
                "eu-west-3": "EU (Paris) [eu-west-3]",
                "sa-east-1": "South America (Sao Paulo) [sa-east-1]",
                "us-east-1": "US East (N. Virginia) [us-east-1]",
                "us-east-2": "US East (Ohio) [us-east-2]",
                "us-west-1": "US West (N. California) [us-west-1]",
                "us-west-2": "US West (Oregon) [us-west-2]",
                "cn-north-1": "China (Beijing) [cn-north-1]",
                "cn-northwest-1": "China (Ningxia) [cn-northwest-1]",
                "us-gov-east-1": "AWS GovCloud (US-East) [us-gov-east-1]",
                "us-gov-west-1": "AWS GovCloud (US) [us-gov-west-1]"
            },
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "stackName",
            "type": "string",
            "label": "Stack Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name that is associated with the stack. The name must be unique in the region in which you are creating the stack.\n\nA stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters."
        },
        {
            "name": "templateSource",
            "type": "pickList",
            "label": "Template Source",
            "required": true,
            "helpMarkDown": "Specifies the location of the template to use to create or update the stack. You can specify the template using either the path to a file in the local file system, a URL to the file or an object in Amazon S3, for which you can specify the bucket and object name (key).\n\nNote that CloudFormation limits the size of template files uploaded to the service to 51,200 bytes. If your template is larger than the allowed size you should choose either the URL or Amazon S3 location options. You can also specify a bucket name for the local file option. If a bucket name  is specified the template is uploaded to the bucket by the task (the object key will be the template filename, less any path).\n\nWhen the task uploads the template to a bucket, or you specify an Amazon S3 bucket name and object key,the task generates a URL to the object and supplies the URL to CloudFormation.\n\n If *Use previous template* is selected CloudFormation will reuse the existing template that is associated with the stack that you are updating. Selecting this option when the stack does not exist will cause the task to report an error and quit.",
            "defaultValue": "file",
            "options": {
                "file": "Local file",
                "url": "URL to the template file",
                "s3": "Amazon S3 bucket and object key",
                "usePrevious": "Use previous template"
            }
        },
        {
            "name": "templateFile",
            "type": "filePath",
            "label": "Template File",
            "required": false,
            "helpMarkDown": "Path to the template file for the stack. This field is required if Template Source is set to use a local file. Template files smaller than 51,200 bytes can be uploaded directly to CloudFormation by the task. For templates larger than 51,200 bytes you should also supply the name of an Amazon S3 bucket to which the template file can be uploaded. If a bucket name is specified the task will upload the template file and then generate a URL to the template file in the bucket which will be used when specifying the template location to CloudFormation.\n\nFor more information see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateSource = file"
        },
        {
            "name": "s3BucketName",
            "type": "string",
            "label": "S3 Bucket",
            "required": false,
            "helpMarkDown": "The name of the bucket to which a local template file can be uploaded, or which contains the template to be used. If Template Source is set to *Amazon S3 bucket and object key* this parameter is required.\n\nFor more information see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateSource = file || templateSource = s3"
        },
        {
            "name": "s3ObjectKey",
            "type": "string",
            "label": "S3 Object Key",
            "required": false,
            "helpMarkDown": "The name of the template file in the S3 bucket. The task will generate a URL to the file when specifying the location of the template file to CloudFormation. If Template Source is set to *Amazon S3 bucket and object key* this parameter is required.\n\nFor more information see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateSource = s3"
        },
        {
            "name": "templateUrl",
            "type": "string",
            "label": "Template URL",
            "required": false,
            "helpMarkDown": "URL reference to the template file in Amazon S3. This field is required if Template Source is set to use a URL. When stored in Amazon S3 template files are subject to a maximum size of 460,800 bytes.\n\nFor more information see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateSource = url"
        },
        {
            "name": "templateParametersSource",
            "type": "radio",
            "label": "Template Parameters Source",
            "required": false,
            "helpMarkDown": "Specifies the source of parameter values to supply with the template. If your template uses parameters you can supply their values in JSON or YAML content, from a file in the build area or inline in the task.\n\nIf your template does not need parameter value to be supplied leave the 'Local file' option field empty. Note that a value is required if the field is set to *Inline*.",
            "defaultValue": "file",
            "options": {
                "file": "Local file",
                "inline": "Inline"
            }
        },
        {
            "name": "templateParametersFile",
            "type": "filePath",
            "label": "Template Parameters File",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optional path to an existing file containing the template parameters in JSON or YAML format. If your template does not require parameters leave the field empty.\n\nCloudFormation expects the file to contain an array of one or more parameter objects. Each object specifies the name of the parameter as *ParameterKey* and the corresponding value in *ParameterValue*. For example (in JSON format):\n\n```json\n[\n\t{\n\t\t\"ParameterKey\":\"parameter1\",\n\t\t\"ParameterValue\":\"parameter1value\"},\n\t{\n\t\t\"ParameterKey\":\"parameter2\",\n\t\t\"ParameterValue\":\"parameter2value\"}\n]```\n\nFor more information, go to [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateParametersSource = file"
        },
        {
            "name": "templateParameters",
            "type": "multiLine",
            "label": "Template Parameters",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Parameter values for the template, in JSON or YAML format. A value must be provided if *Template Parameters Source* is set to *Inline*. Each object specifies the name of the parameter as *ParameterKey* and the corresponding value in *ParameterValue*. For example (in JSON format):\n\n```json\n[\n\t{\n\t\t\"ParameterKey\":\"parameter1\",\n\t\t\"ParameterValue\":\"parameter1value\"},\n\t{\n\t\t\"ParameterKey\":\"parameter2\",\n\t\t\"ParameterValue\":\"parameter2value\"}\n]```\n\n For more information, go to [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the AWS CloudFormation User Guide.",
            "visibleRule": "templateParametersSource = inline",
            "properties": {
                "resizable": "true",
                "rows": "5",
                "maxLength": "5000"
            }
        },
        {
            "name": "useChangeSet",
            "type": "boolean",
            "label": "Create or update the stack using a change set",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected a change set will be created that contains a list of changes that will be applied to a stack and then validated. If the changes validate successfully the change set can then be executed to effect the changes. You can elect to use a change set to both create a new stack or update an existing stack.\n\n__Note:__ when using this task to deploy a serverless application template you must select to use a change set."
        },
        {
            "name": "changeSetName",
            "type": "string",
            "label": "Change Set Name",
            "defaultValue": "",
            "required": false,
            "visibleRule": "useChangeSet = true",
            "helpMarkDown": "The name of the change set. The name must be unique among all change sets that are associated with the specified stack.\n\nA change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters. This parameter is required if the option to use a change set is selected."
        },
        {
            "name": "description",
            "type": "string",
            "label": "Description",
            "defaultValue": "",
            "required": false,
            "visibleRule": "useChangeSet = true",
            "helpMarkDown": "A description to help you identify this change set. Max length 1024 characters."
        },
        {
            "name": "autoExecuteChangeSet",
            "type": "boolean",
            "label": "Automatically execute the change set",
            "defaultValue": "true",
            "required": false,
            "visibleRule": "useChangeSet = true",
            "helpMarkDown": "Automatically executes the change set if it validates successfully."
        },
        {
            "name": "capabilityIAM",
            "type": "boolean",
            "label": "Create/update IAM Resources ('CAPABILITY_IAM')",
            "defaultValue": "true",
            "required": false,
            "groupName": "Capabilities",
            "helpMarkDown": "Capabilities that must be specified before AWS CloudFormation can update certain stacks. Some stack templates might include resources that can affect permissions in your AWS account, for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge their capabilities by specifying this parameter.\n\nIf your stack manipulates IAM resources, you can specify either capability otherwise an InsufficientCapabilities error will be returned."
        },
        {
            "name": "capabilityNamedIAM",
            "type": "boolean",
            "label": "Create/update Named IAM Resources ('CAPABILITY_NAMED_IAM')",
            "defaultValue": "true",
            "required": false,
            "groupName": "Capabilities",
            "helpMarkDown": "Capabilities that must be specified before AWS CloudFormation can update certain stacks. Some stack templates might include resources that can affect permissions in your AWS account, for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge their capabilities by specifying this parameter.\n\nIf your stack manipulates IAM resources with custom names, you must add this capability otherwise an InsufficientCapabilities error will be returned."
        },
        {
            "name": "capabilityAutoExpand",
            "type": "boolean",
            "label": "Allow use of CloudFormation Macros ('CAPABILITY_AUTO_EXPAND')",
            "defaultValue": "false",
            "required": false,
            "groupName": "Capabilities",
            "helpMarkDown": "Capabilities that must be specified before AWS CloudFormation can update certain stacks. Some stack templates might include resources that can affect permissions in your AWS account, for example, by creating new AWS Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge their capabilities by specifying this parameter.\n\nIf your stack manipulates IAM resources with custom names, you must add this capability otherwise an InsufficientCapabilities error will be returned."
        },
        {
            "name": "roleARN",
            "type": "string",
            "label": "Role ARN",
            "defaultValue": "",
            "required": false,
            "groupName": "Advanced",
            "helpMarkDown": "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes when executing the change set. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. It is recommended as a general principle that the role grants least privilege.\n\nIf you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials."
        },
        {
            "name": "resourceTypes",
            "type": "multiLine",
            "label": "Resource Types",
            "defaultValue": "",
            "groupName": "Advanced",
            "required": false,
            "helpMarkDown": "The template resource types that you have permissions to work with if you execute this change set, such as AWS::EC2::Instance, AWS::EC2::*, or Custom::MyCustomInstance.\n\nIf the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, AWS CloudFormation grants permissions to all resource types. AWS Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for AWS CloudFormation.\n\nFor more information, see [Controlling Access with AWS Identity and Access Management](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html) in the AWS CloudFormation User Guide."
        },
        {
            "name": "notificationARNs",
            "type": "multiLine",
            "label": "Notification ARNs",
            "defaultValue": "",
            "required": false,
            "groupName": "Advanced",
            "helpMarkDown": "The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that AWS CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list."
        },
        {
            "name": "tags",
            "type": "multiLine",
            "label": "Tags",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The list of tags (key-value pairs) assigned to the new function. Enter as Key=Value, one per line.",
            "groupName": "Advanced"
        },
        {
            "name": "monitorRollbackTriggers",
            "type": "boolean",
            "label": "Rollback Triggers",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "Rollback triggers enable you to have AWS CloudFormation monitor the state of your application during stack creation and updating, and to rollback that operation if the application breaches the threshold of any of the alarms you've specified. [Learn more](http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RollbackConfiguration.html).",
            "groupName": "Advanced"
        },
        {
            "name": "monitoringTimeInMinutes",
            "type": "string",
            "label": "Trigger Monitoring Time",
            "required": false,
            "defaultValue": "0",
            "helpMarkDown": "The amount of time, in minutes, during which CloudFormation should monitor all the rollback triggers after the stack creation or update operation deploys all necessary resources.\n\nIf you specify a monitoring period but do not specify any rollback triggers, CloudFormation still waits the specified period of time before cleaning up old resources after update operations. You can use this monitoring period to perform any manual stack validation desired, and manually cancel the stack creation or update (using CancelUpdateStack, for example) as necessary.\n\nIf you specify 0 for this parameter, CloudFormation still monitors the specified rollback triggers during stack creation and update operations. Then, for update operations, it begins disposing of old resources immediately once the operation completes. \n\nDefault: 0 minutes. Maximum value: 180 minutes.",
            "groupName": "Advanced",
            "visibleRule": "monitorRollbackTriggers = true"
        },
        {
            "name": "rollbackTriggerARNs",
            "type": "multiLine",
            "label": "Rollback Trigger ARNs",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The Amazon Resource Names (ARNs) of the triggers to monitor during stack creation or update actions.\n\nBy default AWS CloudFormation saves the rollback triggers specified for a stack and applies them to any subsequent update operations for the stack, unless you specify otherwise. If you do specify rollback triggers for this parameter, those triggers replace any list of triggers previously specified for the stack. This means:\n\n* To use the rollback triggers previously specified for this stack, if any, don't specify this parameter.\n\n* To specify new or updated rollback triggers, you must specify all the triggers that you want used for this stack, even triggers you've specifed before (for example, when creating the stack or during a previous stack update). Any triggers that you don't include in the updated list of triggers are no longer applied to the stack.\n\nIf a specified trigger is missing, the entire stack operation fails and is rolled back.\n\nA maximum of five triggers can be supplied.",
            "groupName": "Advanced",
            "visibleRule": "monitorRollbackTriggers = true",
            "options": {
                "resizable": "false",
                "rows": "5"
            }
        },
        {
            "name": "onFailure",
            "type": "pickList",
            "label": "On Failure",
            "defaultValue": "ROLLBACK",
            "groupName": "Options",
            "required": false,
            "helpMarkDown": "Determines what action will be taken if stack creation fails.\n\n Default: Rollback.",
            "options": {
                "DO_NOTHING": "Do Nothing",
                "ROLLBACK": "Rollback",
                "DELETE": "Delete"
            }
        },
        {
            "name": "disableRollback",
            "type": "boolean",
            "label": "Disable Rollback",
            "defaultValue": "false",
            "groupName": "Options",
            "required": false,
            "helpMarkDown": "Set to true to disable rollback of the stack if stack creation failed.\n\n Default: false"
        },
        {
            "name": "warnWhenNoWorkNeeded",
            "type": "boolean",
            "label": "Log warning during stack update if AWS CloudFormation reports no work to be done",
            "defaultValue": "true",
            "groupName": "Options",
            "required": false,
            "helpMarkDown": "When this option is selected and the task is updating a stack, with or without a change set, if AWS CloudFormation detects that no work was required a warning message is emitted into the task log. When this option is not selected the task will ignore the message from the service and emit no warning into the logs."
        },
        {
            "name": "outputVariable",
            "type": "string",
            "label": "Stack ID Output Variable",
            "defaultValue": "",
            "groupName": "Options",
            "helpMarkDown": "The name of the variable that will contain the ID of the stack on task completion. The variable can be used as $(variableName) to refer to the stack ID in subsequent tasks.",
            "required": false
        },
        {
            "name": "captureStackOutputs",
            "type": "pickList",
            "label": "Stack Outputs",
            "defaultValue": "ignore",
            "groupName": "Options",
            "helpMarkDown": "Retrieves the values of the stack outputs declared in the template and stores their values into task variables, with each variable named using the key name of each output, or as a single JSON-formatted blob with a variable named using the stack name suffixed with 'Outputs'.",
            "required": false,
            "options": {
                "ignore": "Skip processing stack outputs",
                "asVariables": "Save stack outputs into task variables",
                "asJSON": "Save stack outputs as a JSON blob"
            }
        },
        {
            "name": "captureAsSecuredVars",
            "type": "boolean",
            "label": "Use secured variables",
            "defaultValue": "true",
            "helpMarkDown": "When selected the build variables created to hold the stack outputs, or the json-formatted blob output, will be created as secure build variables that will not echo to the console logs. This mode is set as the default to prevent accidental secrets leakage.",
            "groupName": "Options",
            "required": false,
            "visibleRule": "captureStackOutputs != ignore"
        },
        {
            "name": "timeoutInMins",
            "type": "string",
            "label": "Max Timeout (minutes)",
            "defaultValue": "60",
            "groupName": "Options",
            "helpMarkDown": "Maximum time, specified in minutes, that the task should wait for the stack creation or update to complete. By default a maximum of 60 minutes is used.",
            "required": false
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "CloudFormationCreateOrUpdateStack.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "CheckingForStackExistence": "Checking existence for stack %s",
        "StackLookupFailed": "Test for existence of stack %s returned error: '%s'.",
        "StackExists": "Stack exists, switching to update stack mode",
        "StackDoesNotExist": "Stack does not exist, switching to create stack mode",
        "CreateStack": "Creating stack with template file %s",
        "UpdateStack": "Updating stack with template file %s",
        "LoadingTemplateFile": "Loading template file from '%s'",
        "TemplateFileDoesNotExist": "Template file '%s' does not exist",
        "LoadingTemplateParametersFile": "Loading template parameters file '%s'",
        "LoadingTemplateParameters": "Loading template parameters from task definition",
        "ParametersLoadSucceeded": "Successfully loaded template parameters",
        "ParametersLoadFailed": "Unable to process parameters as either JSON or YAML as required by AWS CloudFormation",
        "StackCreated": "Stack %s transitioned to create complete status",
        "StackCreationFailed": "Stack %s failed to reach completion status, error: '%s'",
        "StackCreateRequestFailed": "Stack creation request failed with error: '%s'",
        "StackUpdated": "Stack %s transitioned to update complete status",
        "StackUpdateFailed": "Stack %s failed to reach update completion status, error: '%s'",
        "StackUpdateRequestFailed": "Stack update request failed with error: '%s'",
        "WaitingForStackCreation": "Waiting for stack %s to reach create complete status",
        "WaitingForStackUpdate": "Waiting for stack %s to reach update complete status",
        "TaskCompleted": "Stack %s processed successfully, stack ID %s",
        "NoWorkToDo": "WARNING: no changes were detected for the template or change set. The stack was not updated.",
        "ChangeSetCreationFailed": "Change set creation request failed with error: '%s'",
        "WaitingForChangeSetValidation": "Waiting for change set %s to be validated for stack %s",
        "ChangeSetValidated": "Change set successfully validated",
        "ChangeSetValidationFailed": "Stack %s failed to create successfully from the change set %s. Error: '%s'",
        "ExecutingChangeSet": "Executing change set %s",
        "ExecuteChangeSetFailed": "Change set execution request failed with error: '%s'",
        "SettingOutputVariable": "Setting stack ID into task output variable %s",
        "CheckingForExistingChangeSet": "Testing to see if change set %s associated with stack %s exists",
        "ChangeSetExists": "Change set %s exists and is in state %s",
        "ChangeSetLookupFailed": "Test for existence of change set %s returned error: '%s'.",
        "DeletingExistingChangeSet": "Deleting existing change set %s associated with stack %s",
        "FailedToDeleteChangeSet": "Change set deletion request failed with error: '%s'",
        "AddingCapability": "Setting capability %s for stack",
        "AddingTag": "Adding tag key '%s', value '%s'",
        "AutoExecuteChangeSetOption": "Auto execute change set option: %s",
        "CreatingChangeSet": "Creating %s type change set %s",
        "NoParametersFileSpecified": "No parameters file specified",
        "ParametersFileDoesNotExist": "Parameters file '%s' could not be found.",
        "UploadingTemplate": "Uploading template file %s to object %s in bucket %s",
        "FailedToLoadTemplateFile": "Error loading template file: %s",
        "TemplateUploadFailed": "Error uploading template file: %s",
        "AddingRollbackTrigger": "Adding AWS::CloudWatch::Alarm rollback trigger for ARN %s",
        "InvalidTriggerMonitoringTime": "%s is not a valid entry for rollback trigger monitoring time. The value must lie between 0 and %s minutes.",
        "ExceededMaxRollbackTriggers": "%s rollback triggers were specified; the service allows a maximum of %s.",
        "CreatingStackOutputVariable": "Creating stack variable %s to hold corresponding stack output value",
        "UpdatingStackWithPreviousTemplate": "Updating stack using previously applied template",
        "UsePreviousTemplateIsInvalidWhenCreatingStack": "Template source 'Use previous template' is invalid when stack does not exist",
        "ProcessingStackOutputsToBuildVariables": "Processing stack outputs to individual build variables",
        "ProcessingStackOutputsToJsonBlobBuildVariable": "Processing stack outputs to single JSON-formatted build variable",
        "SkippingStackOutputsProcessing": "Skipping processing of stack outputs to build variables as task option is set to 'ignore' mode",
        "SettingCustomTimeout": "Setting maximum wait period for stack creation/update to %s minutes"
    }
}
