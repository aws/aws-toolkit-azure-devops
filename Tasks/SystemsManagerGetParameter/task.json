{
    "id": "57EF2AF4-CD99-4298-BF77-2FEB5DC51863",
    "name": "SystemsManagerGetParameter",
    "friendlyName": "AWS Systems Manager Get Parameter",
    "description": "Reads the value of one or more parameters from the Parameter Store and adds them as variables to the current build or release definition",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Systems Manager Parameter Store](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html) for more information.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/systemsmanager-getparameter.html).\n\n####Task Permissions\nThis task requires permissions to call the following AWS service APIs (depending on selected task options, not all APIs may be used):\n* ssm:GetParameter\n* ssm:GetParametersByPath",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "Systems Manager Get Parameter: $(parameterName)$(parameterNamePrefix)",
    "groups": [
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to obtain credentials from the following sources in order:\n\n* From task variables named _AWS.AccessKeyID_, _AWS.SecretAccessKey_ and optionally _AWS.SessionToken_.\n* From credentials set in environment variables in the build agent process. When using environment variables in the build agent process you may use the standard AWS environment variables: _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n* If the build agent is running on an Amazon EC2 instance, from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "pickList",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used from the following sources:\n\n* From a task variable named _AWS.Region_.\n* From the standard AWS environment variable _AWS_REGION_ in the build agent's environment.\n*  If the build agent is running on an Amazon EC2 instance, from instance metadata associated with the EC2 instance.\n\n__Note:__ The regions listed in the picker are those known at the time this software was released. New regions that are not listed may still be used by entering the _region code_ of the region (for example _us_west_2_).",
            "options": { },
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "readMode",
            "label": "Read Mode",
            "type": "radio",
            "required": true,
            "defaultValue": "single",
            "helpMarkDown": "Whether the task gets the value of a single named parameter or values from a parameter hierarchy identified by common parameter path.",
            "options": {
                "single": "Get value for single parameter",
                "hierarchy": "Get values for parameter hierarchy"
            }
        },
        {
            "name": "parameterName",
            "label": "Parameter Name",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The name identifying a single parameter to be read from the store. Required if _Read Mode_ is set to _Get value for single parameter_.",
            "visibleRule": "readMode = single"
        },
        {
            "name": "parameterVersion",
            "label": "Parameter Version",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "If unspecified the value associated with the latest version of the parameter is read. If specified the task requests the value associated with the supplied version. Parameter versions start at at 1 and increment each time a new value is stored for the parameter.",
            "visibleRule": "readMode = single"
        },
        {
            "name": "parameterPath",
            "label": "Parameter Path",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The path hierarchy for the parameter(s) to be read. Hierarchies start with, and are separated by, a forward slash (/) and may contain up to five levels. The path hierarchy can identify a specific parameter in the hierarchy by appending the parameter name, or can identify a group of parameters sharing the hierarchy path. If the supplied hierarchy contains multiple parameters, all parameter values in the hierachy are downloaded.\n\n__Note:__ _SecureString_ parameters found in a hierachy will be automatically set as secret variables.\n\nRequired if _Read Mode_ is set to _Get values for parameter hierarchy_.",
            "visibleRule": "readMode = hierarchy"
        },
        {
            "name": "recursive",
            "label": "Recursive",
            "type": "boolean",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "If selected then parameter values for the specified _Parameter Path_ and all sub-paths are read. If not selected only the values for parameters matching the supplied path are read, values in sub-paths are ignored.",
            "visibleRule": "readMode = hierarchy"
        },
        {
            "name": "singleNameTransform",
            "label": "Variable Name Transform",
            "type": "pickList",
            "defaultValue": "none",
            "required": false,
            "helpMarkDown": "Options for constructing the output variable name.",
            "visibleRule": "readMode = single",
            "options": {
                "none": "Use parameter name (including any path) as variable name",
                "leaf": "Use leaf of pathed parameter name as variable name",
                "substitute": "Replace text in the parameter name using a regular expression",
                "custom": "Use custom name"
            }
        },
        {
            "name": "hierarchyNameTransform",
            "label": "Variable Name Transform",
            "type": "pickList",
            "defaultValue": "none",
            "required": false,
            "helpMarkDown": "Options for constructing the output variable name.",
            "visibleRule": "readMode = hierarchy",
            "options": {
                "none": "Use parameter names (including any paths) as variable names",
                "leaf": "Use leaf of parameter names as variable names",
                "substitute": "Replace text in the parameter name using a regular expression"
            }
        },
        {
            "name": "customVariableName",
            "label": "Custom Variable Name",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The name of the build variable to hold the parameter value. This value is required if _Variable Name Transform_ is set to _Use custom name_.",
            "visibleRule": "singleNameTransform = custom"
        },
        {
            "name": "replacementPattern",
            "label": "Search Pattern",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "A regular expression defining the text in the parameter name that is to be replaced to form the variable name. This field is required if _Variable Name Transform_ is set to _Replace text in the parameter name using a regular expression_.",
            "visibleRule": "hierarchyNameTransform = substitute || singleNameTransform = substitute"
        },
        {
            "name": "replacementText",
            "label": "Replacement Text",
            "type": "string",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The text to use to replace the matched pattern defined in the _Search Pattern_ option. If an empty string is supplied the text identified by the pattern is simply removed from the parameter name.",
            "visibleRule": "hierarchyNameTransform = substitute || singleNameTransform = substitute"
        },
        {
            "name": "globalMatch",
            "label": "Global Match",
            "type": "boolean",
            "defaultValue": "true",
            "required": "false",
            "helpMarkDown": "If selected then a global match is performed with the specified pattern. If not selected the replacement stops after the first match.",
            "visibleRule": "hierarchyNameTransform = substitute || singleNameTransform = substitute"
        },
        {
            "name": "caseInsensitiveMatch",
            "label": "Case-insensitive Match",
            "type": "boolean",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "If selected a case-insensitive match is performed with the specified pattern.",
            "visibleRule": "hierarchyNameTransform = substitute || singleNameTransform = substitute"
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "SystemsManagerGetParameter.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "ReadingParameterHierarchy": "Reading parameter hierarchy with path %s, recursive mode = %s",
        "SettingVariable": "Setting variable %s from parameter %s, is secret = %s",
        "TransformedParameterName": "Transformed input parameter name %s to build variable name %s",
        "UsingParameterNameForVariable": "Using original parameter name %s for build variable",
        "TaskCompleted": "Successfully created variables from parameter value(s).",
        "InvalidParameterVersion": "%s is not a valid parameter version number. Version numbers should be >= 1"
    }
}
