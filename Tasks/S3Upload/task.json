{
    "id": "3a219265-181c-4ed2-9a51-75a7f308f0d5",
    "name": "S3Upload",
    "friendlyName": "AWS S3 Upload",
    "description": "Upload file and folder content to an Amazon Simple Storage Service (S3) Bucket",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Working with Amazon S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) for more information on working with Amazon S3.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/s3-upload.html).\n\n####Task Permissions\nThis task requires permissions to call the following AWS service APIs (depending on selected task options, not all APIs may be used):\n* s3:CreateBucket\n* s3:HeadBucket\n\nContent uploads are performed using S3's PutObject API and/or the multi-part upload APIs. The specific APIs used depend on the size of the individual files being uploaded.",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "S3 Upload: $(bucketName)",
    "groups": [
        {
            "name": "serverSideEncryption",
            "displayName": "Server-Side Encryption",
            "isExpanded": false
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to obtain credentials from the following sources in order:\n\n* From task variables named _AWS.AccessKeyID_, _AWS.SecretAccessKey_ and optionally _AWS.SessionToken_.\n* From credentials set in environment variables in the build agent process. When using environment variables in the build agent process you may use the standard AWS environment variables: _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n* If the build agent is running on an Amazon EC2 instance, from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "pickList",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used from the following sources:\n\n* From a task variable named _AWS.Region_.\n* From the standard AWS environment variable _AWS_REGION_ in the build agent's environment.\n*  If the build agent is running on an Amazon EC2 instance, from instance metadata associated with the EC2 instance.\n\n__Note:__ The regions listed in the picker are those known at the time this software was released. New regions that are not listed may still be used by entering the _region code_ of the region (for example _us_west_2_).",
            "options": { },
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "bucketName",
            "type": "string",
            "label": "Bucket Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the Amazon S3 bucket to which the content will be uploaded. If the bucket does not exist it can be created if the _Create S3 bucket if it does not exist_ option is selected.\n\n__Note:__ bucket names must be globally unique."
        },
        {
            "name": "sourceFolder",
            "type": "filePath",
            "label": "Source Folder",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The source folder that the filename selection pattern(s) will be run against. If not set the root of the work area is assumed. You can use [variables](https://go.microsoft.com/fwlink/?LinkID=550988).\n\nExample: $(Build.ArtifactStagingDirectory)"
        },
        {
            "name": "globExpressions",
            "type": "multiLine",
            "label": "Filename Patterns",
            "defaultValue": "**",
            "required": true,
            "helpMarkDown": "Glob patterns to select the file and folder content to be uploaded. Supports multiple lines of minimatch patterns."
        },
        {
            "name": "targetFolder",
            "type": "string",
            "label": "Target Folder (S3 key prefix)",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The target folder (referred to as a key prefix in S3) in the bucket to contain the uploaded content. If not set the root of the bucket is assumed. You can also use [variables](https://go.microsoft.com/fwlink/?LinkID=550988) to specify the folder/key prefix value."
        },
        {
            "name": "filesAcl",
            "type": "pickList",
            "label": "Access Control (ACL)",
            "defaultValue": "private",
            "required": false,
            "helpMarkDown": "The canned Access Control List (ACL) to apply to the uploaded content. See [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for an explanation of the possible values. By default all uploaded content is marked _Private_.",
            "options": {
                "private": "private",
                "public-read": "public read",
                "public-read-write": "public read write",
                "authenticated-read": "authenticated read",
                "aws-exec-read": "aws-exec-read",
                "bucket-owner-read": "bucket-owner-read",
                "bucket-owner-full-control": "bucket-owner-full-control"
            }
        },
        {
            "name": "createBucket",
            "type": "boolean",
            "label": "Create S3 bucket if it does not exist",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Attempts to automatically create the S3 bucket if it does not exist.\n\n__Note:__ bucket names must be globally unique."
        },
        {
            "name": "keyManagement",
            "type": "pickList",
            "label": "Encryption Key Management",
            "defaultValue": "none",
            "required": false,
            "helpMarkDown": "You can optionally request Amazon S3 to encrypt data at rest using server-side encryption. Server-side encryption is about data encryption at rest, that is, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts it for you when you access it.\n\nSelect *Use AWS-managed encryption keys* if you want Amazon S3 to manage keys used to encrypt data. To manage and provide your own keys select *Use customer-provided encryption keys*. Selecting *Not using server-side encryption* disables server-side encryption for the uploaded object(s).",
            "options": {
                "none": "Not using server-side encryption",
                "awsManaged": "Use AWS-managed encryption keys",
                "customerManaged": "Use customer-provided encryption key"
            },
            "groupName": "serverSideEncryption"
        },
        {
            "name": "encryptionAlgorithm",
            "type": "radio",
            "label": "Encryption Algorithm",
            "required": false,
            "defaultValue": "KMS",
            "helpMarkDown": "Specifies a server-side encryption algorithm to use when Amazon S3 creates an object.",
            "options": {
                "KMS": "aws:kms",
                "AES256": "AES256"
            },
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = awsManaged"
        },
        {
            "name": "kmsMasterKeyId",
            "type": "string",
            "label": "KMS Master Encryption Key ID",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The ID of the AWS Key Management Service (KMS) master encryption key to be used when encrypting the object.\n\nRequired if _Encryption Algorithm_ is set to _aws:kms_.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = awsManaged && encryptionAlgorithm = KMS"
        },
        {
            "name": "customerKey",
            "type": "string",
            "label": "Customer Key",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Hex-encoded string representing the encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then is discarded; Amazon does not store the encryption key. This value must be appropriate for use with the AES256 encryption algorithm used for encryption when customer managed keys are selected.\n\nRequired when _Encryption Key Management_ is set to _Use customer-provided encryption key_.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = customerManaged"
        },
        {
            "name": "overwrite",
            "type": "boolean",
            "label": "Overwrite",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": " If selected existing files (Amazon S3 objects) in the bucket at the target location are overwritten.",
            "groupName": "advanced"
        },
        {
            "name": "flattenFolders",
            "type": "boolean",
            "label": "Flatten folders",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected the relative subfolders of the files being uploaded are removed and all files are placed directly into the target location. The default behavior is to preserve the relative folder hierarchy.",
            "groupName": "advanced"
        },
        {
            "name": "contentType",
            "type": "string",
            "label": "Content Type",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Sets a custom content type for the uploaded files. If a custom content type is not specified the task will apply built-in defaults for common file types (html, css, js, image files etc). This parameter can be used to override the built-in defaults.\n\n__Note:__ that any value is applied to __all__ files processed by the task.",
            "groupName": "advanced"
        },
        {
            "name": "storageClass",
            "type": "pickList",
            "label": "Storage Class",
            "defaultValue": "STANDARD",
            "required": false,
            "helpMarkDown": "Choose a storage class depending on your use case scenario and performance access requirements.\n\n* *STANDARD* – This storage class (the default) is ideal for performance-sensitive use cases and frequently accessed data.\n* *STANDARD_IA* – This storage class (IA, for infrequent access) is optimized for long-lived and less frequently accessed data, for example backups and older data where frequency of access has diminished, but the use case still demands high performance. **Note** There is a retrieval fee associated with STANDARD_IA objects which makes it most suitable for infrequently accessed data.\n* *REDUCED_REDUNDANCY* – The Reduced Redundancy Storage (RRS) storage class is designed for noncritical, reproducible data stored at lower levels of redundancy than the STANDARD storage class, which reduces storage costs.\n\nSee [Storage Classes](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) in the Amazon S3 documentation for more information.",
            "groupName": "advanced",
            "options": {
                "STANDARD": "Standard",
                "STANDARD_IA": "Standard (Infrequent Access)",
                "REDUCED_REDUNDANCY": "Reduced Redundancy"
            }
        },
        {
            "name": "forcePathStyleAddressing",
            "type": "boolean",
            "label": "Force path style addressing",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected path style URLs will be used for S3 objects. The default is off meaning the task will automatically switch between virtual host style addressing and path style addressing depending on whether the bucket name is DNS compatible.\n\nFor more information see [Virtual Hosting of Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html).",
            "groupName": "advanced"
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "S3Upload.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "FoundNFiles": "found %d files",
        "AllPaths": "All paths %s",
        "MatchedPaths": "Matched paths %s",
        "MatchedFiles": "Matched files list %s",
        "CreateBucketFailure": "Failed to create bucket",
        "BucketCreated": "Bucket created",
        "UploadingFile": "Uploading matched file %s, content type %s",
        "FileUploadCompleted": "Completed upload of %s to %s",
        "FileUploadFailed": "File upload failed",
        "TaskCompleted": "All uploads to S3 completed",
        "UploadingFiles": "Uploading files from %s to %s in bucket %s",
        "BucketNotExistNoAutocreate": "Bucket %s does not exist or you do not have access. Auto-create option not set, cannot continue.",
        "BucketNotExistCreating": "Bucket %s does not appear to exist (or you do not have access). Attempting to create in region %s."
    }
}
