{
    "id": "30f6a876-1d27-450c-b2bb-9f390a592082",
    "name": "S3Download",
    "friendlyName": "AWS S3 Download",
    "description": "Download file and folder content from an Amazon Simple Storage Service (S3) Bucket",
    "author": "Amazon Web Services",
    "helpMarkDown": "Please refer to [Working with Amazon S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html) for more information on working with Amazon S3.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/s3-download.html).\n\n####Task Permissions\nThis task requires permissions to call the following AWS service APIs (depending on selected task options, not all APIs may be used):\n* s3:GetObject\n* s3:HeadBucket\n* s3:ListObjects",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "S3 Download: $(bucketName)",
    "groups": [
        {
            "name": "serverSideEncryption",
            "displayName": "Server-Side Encryption",
            "isExpanded": false
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "diagnostic",
            "displayName": "Diagnostic",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to obtain credentials from the following sources in order:\n\n* From task variables named _AWS.AccessKeyID_, _AWS.SecretAccessKey_ and optionally _AWS.SessionToken_.\n* From credentials set in environment variables in the build agent process. When using environment variables in the build agent process you may use the standard AWS environment variables: _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n* If the build agent is running on an Amazon EC2 instance, from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "pickList",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used from the following sources:\n\n* From a task variable named _AWS.Region_.\n* From the standard AWS environment variable _AWS_REGION_ in the build agent's environment.\n*  If the build agent is running on an Amazon EC2 instance, from instance metadata associated with the EC2 instance.\n\n__Note:__ The regions listed in the picker are those known at the time this software was released. New regions that are not listed may still be used by entering the _region code_ of the region (for example _us_west_2_).",
            "options": { },
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "bucketName",
            "type": "string",
            "label": "Bucket Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the Amazon S3 bucket containing the content to be download."
        },
        {
            "name": "sourceFolder",
            "type": "string",
            "label": "Source Folder",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The source folder (or S3 key prefix) in the bucket that the filename pattern(s) will be run against to select objects to download. If not set the root of the bucket is assumed."
        },
        {
            "name": "globExpressions",
            "type": "multiLine",
            "label": "Filename Patterns",
            "defaultValue": "**",
            "required": true,
            "helpMarkDown": "Glob patterns to select the file and folder content to download. Supports multiple lines of minimatch patterns."
        },
        {
            "name": "targetFolder",
            "type": "filePath",
            "label": "Target Folder",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The target folder on the build host to contain the downloaded content. You can use [variables](https://go.microsoft.com/fwlink/?LinkID=550988)."
        },
        {
            "name": "keyManagement",
            "type": "pickList",
            "label": "Encryption Key Management",
            "defaultValue": "noneOrAWSManaged",
            "required": false,
            "helpMarkDown": "When you retrieve an object from Amazon S3 that was encrypted by using server-side encryption with customer-provided encryption keys (SSE-C), set *Use customer-provided encryption key* and provide the customer key data to enable the object(s) to be decrypted. If the object(s) were encrypted using an Amazon S3-provided key leave this option set to the default value, *Not using server-side encryption, or encrypted using an Amazon S3 managed key*.",
            "options": {
                "noneOrAWSManaged": "Not using server-side encryption, or encrypted using an Amazon S3 managed key",
                "customerManaged": "Use customer-provided encryption key"
            },
            "groupName": "serverSideEncryption"
        },
        {
            "name": "customerKey",
            "type": "string",
            "label": "Customer Key",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Hex-encoded string representing the encryption key for Amazon S3 to use in decrypting data. This value is used to decrypt the object and then is discarded; Amazon does not store the encryption key. This value must be appropriate for use with the AES256 encryption algorithm used for encryption when customer managed keys are selected.\n\nRequired when Encryption Key Management is set to *Use customer-provided encryption key*.",
            "groupName": "serverSideEncryption",
            "visibleRule": "keyManagement = customerManaged"
        },
        {
            "name": "overwrite",
            "type": "boolean",
            "label": "Overwrite",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "If selected the download replaces existing files in and beneath the target folder. If not selected and the file already exists in the target location, an error is thrown.",
            "groupName": "advanced"
        },
        {
            "name": "forcePathStyleAddressing",
            "type": "boolean",
            "label": "Force path style addressing",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected path style URLs will be used when working with the bucket. The default is off meaning the task will automatically switch between virtual host style addressing and path style addressing depending on whether the bucket name is DNS compatible.\n\nFor more information see [Virtual Hosting of Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html).",
            "groupName": "advanced"
        },
        {
            "name": "flattenFolders",
            "type": "boolean",
            "label": "Flatten folders",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected the task will remove the key prefix from the downloaded objects causing them to be written to the selected download folder without subpaths.\n\nIf this option is unchecked, the key prefix of each object is preserved and objects are downloaded to a subfolder hierarchy matching the key prefix of the object.\n\n__Note:__ if folder flattening is selected and multiple objects, with the same name but different key prefixes, exist in the download set an error will be thrown by the task if the _Overwrite_ option is not selected.",
            "groupName": "advanced"
        },
        {
            "name": "logRequest",
            "type": "boolean",
            "label": "Log Request",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, request headers and other data for calls to AWS services are logged to the task's debug log.",
            "groupName": "diagnostic"
        },
        {
            "name": "logResponse",
            "type": "boolean",
            "label": "Log Response",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If selected, the response metadata and body content of non-streaming responses from calls to AWS services are output to the task's debug log. The unique request ID, which can be useful when contacting AWS for support, is always logged to the task output regardless of this option setting.",
            "groupName": "diagnostic"
        }
    ],
    "execution": {
        "Node": {
            "target": "S3Download.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "FileOverwriteWarning": "Target file %s exists for matched key %s, overwriting",
        "FileExistsError": "Target file %s exists for matched key %s, overwrite switch not set, cannot download",
        "ListingKeysFromPrefix": "Querying object keys with prefix %s for bucket %s",
        "ListingKeysFromRoot": "Querying object keys for bucket %s",
        "QueueingDownload": "Queueing download of %s",
        "GlobbingFromPrefix": "Globbing object keys with prefix %s against %s to determine file downloads",
        "GlobbingFromRoot": "Globbing object keys from bucket root against %s to determine file downloads",
        "MatchedKey": "...matched key %s",
        "DownloadingFiles": "Downloading files from %s in bucket %s to %s",
        "BucketNotExist": "Bucket %s does not exist",
        "TaskCompleted": "Downloads from S3 completed"
    }
}
