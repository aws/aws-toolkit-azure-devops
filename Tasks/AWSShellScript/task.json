{
    "id": "3aea39d2-803c-43c7-b8d6-8e71b670f816",
    "name": "AWSShellScript",
    "friendlyName": "AWS Shell Script",
    "description": "Run a shell script using Bash with AWS credentials",
    "author": "Amazon Web Services",
    "helpMarkDown": "Runs a shell script in Bash, setting AWS credentials and region information into the shell environment using the standard environment keys _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_, _AWS_SESSION_TOKEN_ and _AWS_REGION_.\n\nMore information on this task can be found in the [task reference](https://docs.aws.amazon.com/vsts/latest/userguide/awsshell.html).\n\n####Task Permissions\nPermissions for this task to call AWS service APIs depend on the activities in the supplied script.",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [
        "sh"
    ],
    "instanceNameFormat": "AWS Shell Script",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "awsCredentials",
            "type": "connectedService:AWS",
            "label": "AWS Credentials",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Specifies the AWS credentials to be used by the task in the build agent environment.\n\nYou can specify credentials using a service endpoint (of type _AWS_) in the task configuration or you can leave unspecified. If unspecified the task will attempt to obtain credentials from the following sources in order:\n\n* From task variables named _AWS.AccessKeyID_, _AWS.SecretAccessKey_ and optionally _AWS.SessionToken_.\n* From credentials set in environment variables in the build agent process. When using environment variables in the build agent process you may use the standard AWS environment variables: _AWS_ACCESS_KEY_ID_, _AWS_SECRET_ACCESS_KEY_ and optionally _AWS_SESSION_TOKEN_.\n* If the build agent is running on an Amazon EC2 instance, from the instance metadata associated with the EC2 instance. For credentials to be available from EC2 instance metadata the instance must have been started with an instance profile referencing a role granting permissions to the task to make calls to AWS on your behalf. See [Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html) for more information."
        },
        {
            "name": "regionName",
            "label": "AWS Region",
            "type": "pickList",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "The AWS region code (us-east-1, us-west-2 etc) of the region containing the AWS resource(s) the task will use or create. For more information see [AWS Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n\nIf a region is not explicitly configured the task will attempt to obtain the region to be used from the following sources:\n\n* From a task variable named _AWS.Region_.\n* From the standard AWS environment variable _AWS_REGION_ in the build agent's environment.\n*  If the build agent is running on an Amazon EC2 instance, from instance metadata associated with the EC2 instance.\n\n__Note:__ The regions listed in the picker are those known at the time this software was released. New regions that are not listed may still be used by entering the _region code_ of the region (for example _us_west_2_).",
            "options": { },
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "arguments",
            "type": "string",
            "label": "Arguments",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Arguments passed to the shell script"
        },
        {
            "name": "scriptType",
            "type": "radio",
            "label": "Script Source",
            "defaultValue": "filePath",
            "required": true,
            "helpMarkDown": "The source of the script to run. You can choose a file containing the script or enter the script in the task's configuration.",
            "options": {
                "filePath": "Script file",
                "inline": "Inline Script"
            }
        },
        {
            "name": "filePath",
            "type": "filePath",
            "label": "Script Path",
            "defaultValue": "",
            "required": true,
            "visibleRule": "scriptType = filePath",
            "helpMarkDown": "The path of the script file to execute. Must be a fully qualified path or relative to $(System.DefaultWorkingDirectory)."
        },
        {
            "name": "inlineScript",
            "type": "multiLine",
            "label": "Inline Script",
            "defaultValue": "# You can write your script inline here",
            "required": true,
            "helpMarkDown": "The script to execute.",
            "visibleRule": "scriptType = inline",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "5000"
            }
        },
        {
            "name": "disableAutoCwd",
            "type": "boolean",
            "label": "Specify Working Directory",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "The default behavior is to set the working directory to the script location. This enables you to optionally specify a different working directory.",
            "groupName": "advanced"
        },
        {
            "name": "cwd",
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "",
            "required": false,
            "visibleRule": "disableAutoCwd = true",
            "helpMarkDown": "Current working directory where the script is run.  Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory). _Required_ if __Specify Working Directory__ is selected.",
            "groupName": "advanced"
        },
        {
            "name": "failOnStandardError",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "If this is true, this task will fail if any errors are written to the StandardError stream.",
            "groupName": "advanced"
        }
    ],
    "execution": {
        "Node": {
            "target": "AWSShellScript.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "BashReturnCode": "Bash exited with return code: %d",
        "BashFailed": "Bash failed with error: %s"
    }
}
